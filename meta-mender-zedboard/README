meta-mender-zedboard

Mender integration for Zedboard

The tested boards is:

Xilinx zynq 7000 SoC developement Board - Zedboard


Dependencies
This layer depends on:

URI: https://github.com/openembedded/meta-openembedded.git
layers: meta-oe
branch: warrior
revision: HEAD

URI: https://github.com/mendersoftware/meta-mender
layers: meta-mender-core
branch: warrior
revision: HEAD


Quick Start

The following commands will setup the environment and allow you to build images that have Mender integrated.

git clone -b warrior https://git.yoctoproject.org/poky
cd poky
git clone -b warrior https://github.com/openembedded/meta-openembedded.git
git clone -b warrior https://github.com/mendersoftware/meta-mender
git clone https://github.com/nikitarathore/OTA-update.git

source oe-init-build-env

add the layers in conf/bblayers.conf -
bitbake-layers add-layer ../meta-openembedded/meta-oe
bitbake-layers add-layer ../meta-openembedded/meta-python
bitbake-layers add-layer ../meta-openembedded/meta-networking
bitbake-layers add-layer ../meta-mender/meta-mender-core
bitbake-layers add-layer ../meta-mender/meta-mender-commercial 
bitbake-layers add-layer ../meta-mender-zedboard


To build the image-
bitbake core-image-base

This will generate the disk image (.sdimg) and a .mender rootfs file. The Yocto Linux and OTA update functionality image
is stored on the SD card. The board accesses it via the SD card reader. The image contains four partitions - BOOT, rootfs A, rootfs B, and a Data partition.
The code and the FPGA bitstream which neede to be updated are stored within the file system. During each system update, the new file system is sent over the
network.

To Performe the Wireless Software Update -
1) Host setup: Start a HTTP server: python -m http.server
2) Target setup: assign the server IP address and updated file:
    mender -install http://10.5.2.xx:8000/releaseV01.mender
3) reboot the device and commit the update if device is updated successfully with the new image.

